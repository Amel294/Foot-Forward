<div class="nk-footer">
    <div class="container-fluid">
        <div class="nk-footer-wrap">
            <div class="nk-footer-copyright"> &copy;Foot Forward </div>

        </div>
    </div>
</div>
</div>
</div>
</div>

<!-- Import jQuery from a CDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="/static/assets/js/bundlee5ca.js?ver=3.2.3"></script>
<script src="/static/assets/js/scriptse5ca.js?ver=3.2.3"></script>
<script src="/static/assets/js/demo-settingse5ca.js?ver=3.2.3"></script>
<script src="/static/assets/js/example-sweetalerte5ca.js"></script>
<!-- <script src="/static/assets/js/charts/chart-ecommercee5ca.js?ver=3.2.3"></script> -->
<!-- JavaScript for Select2 -->

<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
<script src=/static/assets/js/orders.js></script>
<script src=/static/assets/js/products.js></script>
<script>$("#banner_active").prop("checked", true);</script>


<!-- JavaScript to toggle visibility -->
<script>
    const offerTypeSelect = document.getElementById('offerTypeSelect');
    const categoryOptions = document.getElementById('categoryOptions');
    const productOptions = document.getElementById('productOptions');

    offerTypeSelect.addEventListener('change', function () {
        if (offerTypeSelect.value === 'Category') {
            categoryOptions.style.display = 'block';
            productOptions.style.display = 'none';
            renderCategoryOptions();
        } else if (offerTypeSelect.value === 'Product') {
            categoryOptions.style.display = 'none';
            productOptions.style.display = 'block';
            renderProductOptions();
        }
    });

    // Function to render category options
    function renderCategoryOptions() {
        categoryOptions.innerHTML = `
    <div class="col-lg-5">
        <div class="form-group">
            <label class="form-label">Select Category</label>
        </div>
    </div>
    <div class="col-lg-7">
        <div class="form-group">
            <div class="form-control-wrap">
                <select name="offerCategory" class="form-select form-control-lg">
                    <% for (let i = 0; i < category.length; i++) { %>
                        <option value="<%= category[i].Subcategory %>" data-categoryid="<%= category[i]._id %>"><%= category[i].Subcategory %></option>
                    <% } %>
                </select>
            </div>
        </div>
    </div>
    `;
        productOptions.innerHTML = ''; // Clear product options
    }

    // Function to render product options
    function renderProductOptions() {
        productOptions.innerHTML = `
    <div class="col-lg-5">
        <div class="form-group">
            <label class="form-label">Select Product</label>
        </div>
    </div>
    <div class="col-lg-7">
        <div class="form-group">
            <div class="form-control-wrap">
                <select name="offerProduct" class="form-select form-control-lg">
                    <% for (let i = 0; i < products.length; i++) { %>
                        <option value="<%= products[i].name %>" data-productid="<%= products[i]._id %>"><%= products[i].name %></option>
                    <% } %>
                </select>
            </div>
        </div>
    </div>
    `;
        categoryOptions.innerHTML = ''; // Clear category options
    }

</script>


<script>
    function convertToISO(dateStr, timeStr) {
        // Parse the date and time
        const [month, day, year] = dateStr.split('/');
        const [hour, minutePart] = timeStr.split(':');
        const minute = minutePart.slice(0, 2);
        const amPm = minutePart.slice(3).toUpperCase();

        // Convert 12-hour time to 24-hour time
        let hour24 = parseInt(hour, 10);
        if (amPm === 'PM' && hour24 < 12) {
            hour24 += 12;
        } else if (amPm === 'AM' && hour24 === 12) {
            hour24 = 0;
        }

        // Create a new Date object
        const dateTime = new Date(Date.UTC(year, month - 1, day, hour24, minute));

        // Convert to ISO string with timezone offset
        return dateTime.toISOString();
    }

    document.getElementById('offerForm').addEventListener('submit', function (e) {
        e.preventDefault();
        console.log("Button Pressed");

        const offerType = document.querySelector('[name="offerType"]').value;
        let productId;
        let categoryId;

        if (offerType === "Product") {
            let productSelect = document.querySelector('select[name="offerProduct"]');
            if (productSelect && productSelect.selectedOptions.length > 0) {
                productId = productSelect.selectedOptions[0].dataset.productid;
            } else {
                productSelect = null;
                console.error("Product select box not found or no product selected");
                // Handle the error case appropriately
            }
        } else if (offerType === "Category") {
            let categorySelect = document.querySelector('select[name="offerCategory"]');
            if (categorySelect && categorySelect.selectedOptions.length > 0) {
                categoryId = categorySelect.selectedOptions[0].dataset.categoryid;
            } else {
                categorySelect = null;
                console.error("Category select box not found or no category selected");
                // Handle the error case appropriately
            }
        }

        const offerName = document.querySelector('[name="offerName"]').value;
        const offerDescription = document.querySelector('[name="offerDescription"]').value;
        const offerDiscount = document.querySelector('[name="offerDiscount"]').value;
        const coupanDate = document.querySelector('[name="coupanDate"]').value;
        const coupanTime = document.querySelector('[name="coupanTime"]').value;
        const offerMaxUses = document.querySelector('[name="offerMaxUses"]').value;
        const offerEnable = document.querySelector('[name="offerEnable"]:checked').value === 'Enable';

        const isoDateTime = convertToISO(coupanDate, coupanTime);
        console.log(isoDateTime);

        const data = {
            offerName,
            offerDescription,
            offerCategory: categoryId,
            offerProduct: productId,
            offerType,
            offerDiscount,
            offerValidUntil: isoDateTime,
            offerMaxUses,
            offerEnable
        };



        $.ajax({
            url: '/admin/create-offer',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (response) {
                console.log('Offer created:', response);
                Swal.fire({
                    title: 'Success!',
                    text: 'Offer Added successfully:',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(function () {
                    // Reload the page when the user clicks "OK"
                    location.reload();
                });
            },
            error: function (xhr, status, error) {
                const errorMessage = xhr.responseText;
                console.error('Error creating offer:', errorMessage);
                Swal.fire({
                    title: 'Error!',
                    text: 'Error creating offer:'+ errorMessage,
                    icon: 'error',
                    confirmButtonText: 'OK'
                })
            }
        });
    });

</script>


<script>
    $(document).ready(function () {
        $('#referralSettingsForm').on('submit', function (e) {
            e.preventDefault();

            const isEnabled = $('#referralToggle').is(':checked');
            const reward = $('#referralReward').val();

            $.ajax({
                url: '/admin/update-referral-settings',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ isEnabled, reward }),
                success: function (response) {
                    console.log(response);
                    Swal.fire({
                        title: 'Success!',
                        text: 'Referral settings updated successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    })

                },
                error: function (error) {
                    console.error(error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Error updating referral settings',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    })
                }
            });
        });
    });
</script>



<script>
    $(document).ready(function () {
    // Listen for click events on the remove-offer buttons
    $('.remove-offer').click(function () {
        const offerId = $(this).data('offerid');

        // Send an AJAX request to remove the offer
        $.ajax({
            type: 'POST',
            url: '/admin/remove-offer',
            data: { offerId: offerId },
            success: function (response) {
                // Remove the table row when the offer is successfully removed
                $(`tr[data-offerid="${ offerId }"]`).remove();
                console.log('Offer removed successfully:', response.message);
                Swal.fire({
                    title: 'Success!',
                    text: 'Offer removed successfully:',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(function () {
                    // Reload the page when the user clicks "OK"
                    location.reload();
                });
            },
            error: function (error) {
                console.error('Error removing offer:', error.responseText);
                // Handle errors (e.g., show an error message)
            }
        });
    });
});

</script>



</body>

</html>