<!-- tap to top Section Start -->

<!-- tap to top Section End -->

<div class="bg-overlay"></div>

<!-- latest jquery-->

<!-- Bootstrap js-->
<script src="/static/user/js/bootstrap/bootstrap.bundle.min.js"></script>

<!-- feather icon js-->
<script src="/static/user/js/feather/feather.min.js"></script>

<!-- lazyload js-->
<script src="/static/user/js/lazysizes.min.js"></script>

<!-- Slick js-->
<script src="/static/user/js/slick/slick.js"></script>
<script src="/static/user/js/slick/slick-animation.min.js"></script>
<script src="/static/user/js/slick/custom_slick.js"></script>

<!-- newsletter js -->
<script src="/static/user/js/newsletter.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- Add To Home js -->
<script src="/static/user/js/pwa.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- feather icon js-->
<!-- <script src="/static/user/js/timer1.js"></script> -->

<!-- notify js -->
<script src="/static/user/js/bootstrap/bootstrap-notify.min.js"></script>

<!-- script js -->
<script src="/static/user/js/theme-setting.js"></script>
<script src="/static/user/js/script.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src=/static/user/js/custom/userValidation.js></script>
<script src="/static/assets/js/example-sweetalerte5ca.js"></script>

<!-- Include Elevate Zoom -->
<script>
  function toggleHeart(element) {
    element.classList.toggle('active');
  }

</script>
<!-- Add your Slick carousel initialization script at the bottom of your page -->
<script>
  $(document).ready(function () {
    // Main slider
    $('.slick-slider-main').slick({
      slidesToShow: 1,
      slidesToScroll: 1,
      arrows: true,
      fade: true,
      asNavFor: '.slick-slider-nav'
    });

    // Navigation slider
    $('.slick-slider-nav').slick({
      slidesToShow: 3,
      slidesToScroll: 1,
      asNavFor: '.slick-slider-main',
      dots: true,
      centerMode: true,
      focusOnSelect: true
    });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const logoutLink = document.getElementById("logout_main_nav");

    logoutLink.addEventListener("click", function (event) {
      event.preventDefault();

      // Send a POST request to /logout using fetch
      fetch("/logout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        // You can include any data you want to send with the request
        // For example, you might want to include a CSRF token if your server requires it
        body: JSON.stringify({}),
      })
        .then((response) => {
          if (response.status === 200) {
            // Successful logout, you can handle the redirection here if needed
            window.location.href = "/products"; // Redirect to the homepage
          } else {
            // Handle other response statuses (e.g., error)
            console.error("Logout failed");
          }
        })
        .catch((error) => {
          console.error("Error occurred during logout:", error);
        });
    });
  });

</script>

<script>
  // Add event listener for all remove links
document.querySelectorAll('.cart-table .fa-times').forEach(item => {
    item.addEventListener('click', function (e) {
        e.preventDefault();
        const itemId = this.getAttribute('data-item-id');
        fetch(`/cart/remove/${itemId}`, {
            method: 'POST'
        }).then(response => response.json())
          .then(data => {
              if (data.success) {
                  // Remove the item from the DOM or update the page content
              }
          });
    });
});

</script>
<script>
  $(document).ready(function() {
      // Function to update the total price for a specific item
      function updateItemTotal(itemId) {
          const price = parseFloat($(`#price-${itemId}`).text().replace('₹', ''));
          const quantity = parseInt($(`#quantity-${itemId}`).val());
          const total = price * quantity;
          $(`#total-${itemId}`).text(`₹${total.toFixed(2)}`);
      }
  
      // Function to update the grand total price for the entire cart
      function updateGrandTotal() {
          let grandTotal = 0;
          $('.item-total').each(function() {
              const total = parseFloat($(this).text().replace('₹', ''));
              grandTotal += total;
          });
          $('#grand-total').text(`₹${grandTotal.toFixed(2)}`);
      }
  
      // Update quantity in cart
      $('.input-number').on('change', function() {
          const itemId = $(this).closest('tr').data('item-id');
          const quantity = $(this).val();
  
          $.ajax({
              url: '/cart/update-quantity/' + itemId,
              type: 'PUT',
              data: { quantity: quantity },
              success: function(response) {
                  // Update the item total and grand total
                  updateItemTotal(itemId);
                  updateGrandTotal();
              }
          });
      });
  
      // Remove item from cart
      $('.remove-item').click(function(e) {
          e.preventDefault();
          const itemId = $(this).data('item-id');
  
          $.ajax({
              url: '/cart/remove/' + itemId,
              type: 'PUT',
              success: function(response) {
                  $(`#item-row-${itemId}`).remove(); // Remove the item row from the table
                  updateGrandTotal();
              }
          });
      });
  });
  </script>
  

//catagory filter

<script>
  // Initialize currentPage with the current page from the server
  let currentPage = <%= currentPage %>;

  // Function to update the product list based on filters and pagination
  function updateProductList() {
    // Get selected filter criteria (brands, categories, colors, minPrice, maxPrice, search term)
    const selectedBrands = [];
    const selectedCategories = [];
    const selectedColors = [];
    const minPrice = $('#minPrice').val();
    const maxPrice = $('#maxPrice').val();
    const searchTerm = $('#searchInput').val();

    $('input[type="checkbox"].check-it:checked').each(function () {
      const id = $(this).attr('id');
      if (id.startsWith('brand-')) {
        selectedBrands.push(id.replace('brand-', ''));
      } else if (id.startsWith('category-')) {
        selectedCategories.push(id.replace('category-', ''));
      } else if (id.startsWith('color-')) {
        selectedColors.push(id.replace('color-', ''));
      }
    });

    // Debugging: Log selected items
    console.log('Selected Brands:', selectedBrands);
    console.log('Selected Categories:', selectedCategories);
    console.log('Selected Colors:', selectedColors);
    console.log('Min Price:', minPrice);
    console.log('Max Price:', maxPrice);

    // Make an AJAX request to fetch products based on the selected criteria and current page
    $.ajax({
      url: '/products/filter',
      type: 'GET',
      data: {
        brand: selectedBrands.join(','),
        category: selectedCategories.join(','),
        color: selectedColors.join(','),
        minPrice: minPrice,
        maxPrice: maxPrice,
        search: searchTerm,
        page: currentPage // Include the current page in the request
      },
      success: function (response) {
        // Update the product list container with the new products
        $('#product-container').html(response);
      },
      error: function (err) {
        console.error('Error fetching data:', err);
      }
    });
  }

  // Define the loadPage function to handle pagination
  function loadPage(pageNumber) {
    // Update the currentPage variable with the new page number
    currentPage = pageNumber;
    // Call the updateProductList function to fetch and display products for the new page
    updateProductList();
  }

  // Event listeners for filter criteria changes
  $('#searchInput').on('input', updateProductList);
  $('input[type="checkbox"].check-it').on('change', updateProductList);
  $('#minPrice, #maxPrice').on('input', updateProductList);

  // Event listener for pagination links
  $('.page-link').on('click', function (e) {
    e.preventDefault();
    const page = $(this).attr('href').split('=')[1];
    currentPage = parseInt(page);
    loadPage(currentPage); // Call the loadPage function with the new page
  });

  // Initial call to populate products based on default filters if needed
  // Uncomment this if you want to load products on page load
  updateProductList();
</script>








  
  





</body>

</html>