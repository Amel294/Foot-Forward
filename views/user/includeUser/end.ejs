<!-- tap to top Section Start -->

<!-- tap to top Section End -->

<div class="bg-overlay"></div>

<!-- latest jquery-->

<!-- Bootstrap js-->
<script src="/static/user/js/bootstrap/bootstrap.bundle.min.js"></script>

<!-- feather icon js-->
<script src="/static/user/js/feather/feather.min.js"></script>

<!-- lazyload js-->
<script src="/static/user/js/lazysizes.min.js"></script>

<!-- Slick js-->
<script src="/static/user/js/slick/slick.js"></script>
<script src="/static/user/js/slick/slick-animation.min.js"></script>
<script src="/static/user/js/slick/custom_slick.js"></script>

<!-- newsletter js -->
<script src="/static/user/js/newsletter.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- Add To Home js -->
<script src="/static/user/js/pwa.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- feather icon js-->
<!-- <script src="/static/user/js/timer1.js"></script> -->

<!-- notify js -->
<script src="/static/user/js/bootstrap/bootstrap-notify.min.js"></script>

<!-- script js -->
<script src="/static/user/js/theme-setting.js"></script>
<script src="/static/user/js/script.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src=/static/user/js/custom/userValidation.js></script>
<!-- Include Elevate Zoom -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>
<script>
  function toggleHeart(element) {
    element.classList.toggle('active');
  }

</script>
<!-- Add your Slick carousel initialization script at the bottom of your page -->
<script>
  $(document).ready(function () {
    // Main slider
    $('.slick-slider-main').slick({
      slidesToShow: 1,
      slidesToScroll: 1,
      arrows: true,
      fade: true,
      asNavFor: '.slick-slider-nav'
    });

    // Navigation slider
    $('.slick-slider-nav').slick({
      slidesToShow: 3,
      slidesToScroll: 1,
      asNavFor: '.slick-slider-main',
      dots: true,
      centerMode: true,
      focusOnSelect: true
    });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const logoutLink = document.getElementById("logout_main_nav");

    logoutLink.addEventListener("click", function (event) {
      event.preventDefault();

      // Send a POST request to /logout using fetch
      fetch("/logout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        // You can include any data you want to send with the request
        // For example, you might want to include a CSRF token if your server requires it
        body: JSON.stringify({}),
      })
        .then((response) => {
          if (response.status === 200) {
            // Successful logout, you can handle the redirection here if needed
            window.location.href = "/products"; // Redirect to the homepage
          } else {
            // Handle other response statuses (e.g., error)
            console.error("Logout failed");
          }
        })
        .catch((error) => {
          console.error("Error occurred during logout:", error);
        });
    });
  });

</script>

<script>
  // Add event listener for all remove links
document.querySelectorAll('.cart-table .fa-times').forEach(item => {
    item.addEventListener('click', function (e) {
        e.preventDefault();
        const itemId = this.getAttribute('data-item-id');
        fetch(`/cart/remove/${itemId}`, {
            method: 'POST'
        }).then(response => response.json())
          .then(data => {
              if (data.success) {
                  // Remove the item from the DOM or update the page content
              }
          });
    });
});

</script>
<script>
  $(document).ready(function() {
      // Function to update the total price for a specific item
      function updateItemTotal(itemId) {
          const price = parseFloat($(`#price-${itemId}`).text().replace('₹', ''));
          const quantity = parseInt($(`#quantity-${itemId}`).val());
          const total = price * quantity;
          $(`#total-${itemId}`).text(`₹${total.toFixed(2)}`);
      }
  
      // Function to update the grand total price for the entire cart
      function updateGrandTotal() {
          let grandTotal = 0;
          $('.item-total').each(function() {
              const total = parseFloat($(this).text().replace('₹', ''));
              grandTotal += total;
          });
          $('#grand-total').text(`₹${grandTotal.toFixed(2)}`);
      }
  
      // Update quantity in cart
      $('.input-number').on('change', function() {
          const itemId = $(this).closest('tr').data('item-id');
          const quantity = $(this).val();
  
          $.ajax({
              url: '/cart/update-quantity/' + itemId,
              type: 'PUT',
              data: { quantity: quantity },
              success: function(response) {
                  // Update the item total and grand total
                  updateItemTotal(itemId);
                  updateGrandTotal();
              }
          });
      });
  
      // Remove item from cart
      $('.remove-item').click(function(e) {
          e.preventDefault();
          const itemId = $(this).data('item-id');
  
          $.ajax({
              url: '/cart/remove/' + itemId,
              type: 'PUT',
              success: function(response) {
                  $(`#item-row-${itemId}`).remove(); // Remove the item row from the table
                  updateGrandTotal();
              }
          });
      });
  });
  </script>
  

//catagory filter

<script>
  function nextPage() {
    if (currentPage < totalPages) {
      currentPage++;
      updateProductList();
    }
  }
  function updateProductList() {
    const selectedBrands = [];
    const selectedColors = [];
    const selectedCategories = [];
    let minPrice = $('#minPrice').val();
    let maxPrice = $('#maxPrice').val();

    // Get the selected checkboxes
    $('input[type="checkbox"].check-it:checked').each(function() {
        const id = $(this).attr('id');
        if (id.startsWith('brand-')) {
            selectedBrands.push(id.replace('brand-', ''));
        } else if (id.startsWith('category-')) {
            selectedCategories.push(id.replace('category-', ''));
        } else if (id.startsWith('color-')) {
            selectedColors.push(id.replace('color-', ''));
        }
    });

    // Debugging: Log selected items
    console.log('Selected Brands:', selectedBrands);
    console.log('Selected Categories:', selectedCategories);
    console.log('Selected Colors:', selectedColors);
    console.log('Min Price:', minPrice);
    console.log('Max Price:', maxPrice);

    // Now, you can use the selectedBrands and selectedCategories in your AJAX request
    // You can also use minPrice and maxPrice for filtering products by price range
    $.ajax({
        url: '/products/filter',
        type: 'GET',
        data: {
            brand: selectedBrands.join(','), // Backend expects comma-separated values
            category: selectedCategories.join(','), // Backend expects comma-separated values for categories
            color: selectedColors.join(','), // Adjust accordingly if you have color filters
            minPrice: minPrice,
            maxPrice: maxPrice
        },
        success: function(response) {
            // Update the product list in the DOM with the response
            $('#product-container').html(response); // Update the "product-container" div
        },
        error: function(err) {
            console.error('Error fetching data:', err);
        }
    });
}

// Event listeners
$('input[type="checkbox"].check-it').on('change', updateProductList);
$('#minPrice, #maxPrice').on('input', updateProductList);

// Initial call to populate products based on default filters if needed
// Uncomment this if you want to load products on page load
updateProductList();

</script>


  



</body>

</html>