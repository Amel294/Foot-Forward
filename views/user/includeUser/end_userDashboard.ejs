<!-- tap to top Section Start -->

<!-- tap to top Section End -->

<div class="bg-overlay"></div>

<!-- latest jquery-->

<!-- Bootstrap js-->
<script src="/static/user/js/bootstrap/bootstrap.bundle.min.js"></script>

<!-- feather icon js-->
<script src="/static/user/js/feather/feather.min.js"></script>

<!-- lazyload js-->
<script src="/static/user/js/lazysizes.min.js"></script>

<!-- Slick js-->
<script src="/static/user/js/slick/slick.js"></script>
<script src="/static/user/js/slick/slick-animation.min.js"></script>
<script src="/static/user/js/slick/custom_slick.js"></script>

<!-- newsletter js -->
<script src="/static/user/js/newsletter.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- Add To Home js -->
<script src="/static/user/js/pwa.js"></script>

<!-- add to cart modal resize -->
<script src="/static/user/js/cart_modal_resize.js"></script>

<!-- feather icon js-->
<!-- <script src="/static/user/js/timer1.js"></script> -->

<!-- notify js -->
<script src="/static/user/js/bootstrap/bootstrap-notify.min.js"></script>

<!-- script js -->
<script src="/static/user/js/theme-setting.js"></script>
<script src="/static/user/js/script.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src=/static/user/js/custom/userValidation.js></script>
<!-- Include Elevate Zoom -->

<!-- Bootstrap JS, Popper.js, and jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="/static/user/js/custom/dashboard_address.js"></script>
<script>
  function toggleHeart(element) {
    element.classList.toggle('active');
  }

</script>


<!-- Add your Slick carousel initialization script at the bottom of your page -->
<script>
  $(document).ready(function () {
    // Main slider
    $('.slick-slider-main').slick({
      slidesToShow: 1,
      slidesToScroll: 1,
      arrows: true,
      fade: true,
      asNavFor: '.slick-slider-nav'
    });

    // Navigation slider
    $('.slick-slider-nav').slick({
      slidesToShow: 3,
      slidesToScroll: 1,
      asNavFor: '.slick-slider-main',
      dots: true,
      centerMode: true,
      focusOnSelect: true
    });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const logoutLink = document.getElementById("logout_main_nav");

    logoutLink.addEventListener("click", function (event) {
      event.preventDefault();

      // Send a POST request to /logout using fetch
      fetch("/logout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        // You can include any data you want to send with the request
        // For example, you might want to include a CSRF token if your server requires it
        body: JSON.stringify({}),
      })
        .then((response) => {
          if (response.status === 200) {
            // Successful logout, you can handle the redirection here if needed
            window.location.href = "/products"; // Redirect to the homepage
          } else {
            // Handle other response statuses (e.g., error)
            console.error("Logout failed");
          }
        })
        .catch((error) => {
          console.error("Error occurred during logout:", error);
        });
    });
  });

</script>




<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.remove-from-wishlist').forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const productId = this.dataset.productId;
        const productRow = this.closest('tr');
  
        fetch(`/wishlist/remove/${productId}`, { method: 'DELETE' })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              console.error(data.error);
            } else {
              // Remove the product row from the table
              productRow.remove();
              console.log(data.message);
            }
          })
          .catch(error => console.error('Error:', error));
      });
    });
  });
  </script>
  
  
  <script>
    // Function to cancel an order
    function cancelOrder(orderId, itemId) {
  fetch(`/orders/cancel/${orderId}/${itemId}`, {
    method: 'POST',
  })
  .then(response => response.json())
  .then(data => {
    // Use SweetAlert2 to display the message
    Swal.fire({
  title: 'Order Cancelled!',
  text: 'Your order has been successfully cancelled.',
  imageUrl: 'https://i.gifer.com/7JJ.gif',
  imageWidth: 100, // You can set the width of your image here
  imageHeight: 100, // And the height here
  imageAlt: 'Custom image', // Alt text for the image
  confirmButtonText: 'OK'
});

    // Update the UI to show that the order has been cancelled
    const orderElement = document.querySelector(`[data-order-id='${orderId}']`).closest('.order-row');
    if (orderElement) {
      orderElement.innerHTML = '<p>Order Cancelled</p>'; // Replace with your preferred UI change
    }
  })
  .catch(error => {
    console.error('Error cancelling order:', error);
    Swal.fire({
      title: 'Error',
      text: 'There was an error cancelling your order.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
  });
}

// Function to return an order
function returnOrder(orderId, itemId) {
  Swal.fire({
    title: 'Enter your return reason',
    input: 'text',
    inputLabel: 'Reason for Return',
    showCancelButton: true,
    confirmButtonText: 'Submit',
    showLoaderOnConfirm: true,
    preConfirm: (returnReason) => {
      // Check if the returnReason is empty
      if (!returnReason.trim()) {
        Swal.showValidationMessage('Please enter a reason for return');
        return false; // Prevents the dialog from closing
      }
      // Proceed with the fetch request
      return fetch(`/orders/return/${orderId}/${itemId}/${encodeURIComponent(returnReason)}`, {
        method: 'POST',
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(response.statusText);
        }
        return response.json();
      })
      .catch(error => {
        Swal.showValidationMessage(`Request failed: ${error}`);
      });
    },
    allowOutsideClick: () => !Swal.isLoading()
  }).then((result) => {
    if (result.isConfirmed && result.value) {
      // Assuming result.value contains the response from your server
      alert(result.value.message);
      // Update the UI to show that the order is being returned
      const orderElement = document.querySelector(`[data-order-id='${orderId}']`).closest('.order-row');
      if (orderElement) {
        orderElement.innerHTML = '<p>Return Initiated</p>'; // Replace with your preferred UI change
      }
    }
  })
  .catch(error => console.error('Error returning order:', error));
}


// Event listeners for cancel and return buttons
document.addEventListener('click', function (event) {
  if (event.target.classList.contains('cancel-order')) {
    event.preventDefault();
    const orderId = event.target.getAttribute('data-order-id');
    const itemId = event.target.getAttribute('data-item-id');

    cancelOrder(orderId,itemId);
  } else if (event.target.classList.contains('return-order')) {
    event.preventDefault();
    const orderId = event.target.getAttribute('data-order-id');
    const itemId = event.target.getAttribute('data-item-id');

    returnOrder(orderId,itemId);
  }
});

  </script>
  
  <script>
    document.getElementById('generateReferralCode').addEventListener('click', function() {
        fetch('/create-referral-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            // Include additional data if needed
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            // Refresh the page on successful referral code generation
            window.location.reload();
        })
        .catch(error => {
            // Handle any errors here
            console.error('Error generating referral code:', error);
        });
    });
</script>




</body>

</html>